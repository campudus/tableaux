# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  # push:
  #   branches: [ master ]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres-version:
          - 9.6
        postgres-db:
          - testing
        postgres-pw:
          - testing
        postgres-user:
          - testing
        postgres-host:
          - 127.0.0.1
        postgres-port:
          - 5432
      # uncomment when we activate matrix
      # max-parallel: 4

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_DB: ${{ matrix.postgres-db }}
          POSTGRES_USER: ${{ matrix.postgres-user }}
          POSTGRES_PASSWORD: ${{ matrix.postgres-pw }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"

      - name: Setup Test ENV
        run: mv conf-github-ci.json conf-test.json

      # # test queries database with postgres client
      # - name: Install PostgreSQL client
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install --yes postgresql-client
      # - name: Query database
      #   run: psql -h ${{ matrix.postgres-host }} -d ${{ matrix.postgres-db }} -U ${{ matrix.postgres-user }} -c 'SELECT VERSION();'
      #   env:
      #     PGPASSWORD: ${{ matrix.postgres-pw }}

      - name: Cleanup
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean

      - name: Spotless Check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessCheck scoverageClasses

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testClasses assemble test --info

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: build/reports/tests/test

      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: output/test/code-coverage.html
